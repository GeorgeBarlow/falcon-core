{"version":3,"sources":["../../src/languages/N1qlFormatter.js"],"names":["reservedWords","reservedToplevelWords","reservedNewlineWords","tokenizer","N1qlFormatter","constructor","cfg","format","query","Tokenizer","stringTypes","openParens","closeParens","namedPlaceholderTypes","lineCommentTypes","Formatter"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,MAAMA,gBAAgB,CACpB,KADoB,EAEpB,OAFoB,EAGpB,SAHoB,EAIpB,KAJoB,EAKpB,KALoB,EAMpB,OANoB,EAOpB,IAPoB,EAQpB,KARoB,EASpB,OAToB,EAUpB,SAVoB,EAWpB,QAXoB,EAYpB,SAZoB,EAapB,OAboB,EAcpB,QAdoB,EAepB,OAfoB,EAgBpB,IAhBoB,EAiBpB,MAjBoB,EAkBpB,MAlBoB,EAmBpB,MAnBoB,EAoBpB,SApBoB,EAqBpB,SArBoB,EAsBpB,YAtBoB,EAuBpB,QAvBoB,EAwBpB,SAxBoB,EAyBpB,UAzBoB,EA0BpB,WA1BoB,EA2BpB,OA3BoB,EA4BpB,QA5BoB,EA6BpB,UA7BoB,EA8BpB,SA9BoB,EA+BpB,WA/BoB,EAgCpB,SAhCoB,EAiCpB,WAjCoB,EAkCpB,QAlCoB,EAmCpB,SAnCoB,EAoCpB,MApCoB,EAqCpB,UArCoB,EAsCpB,UAtCoB,EAuCpB,IAvCoB,EAwCpB,MAxCoB,EAyCpB,MAzCoB,EA0CpB,SA1CoB,EA2CpB,MA3CoB,EA4CpB,KA5CoB,EA6CpB,OA7CoB,EA8CpB,QA9CoB,EA+CpB,SA/CoB,EAgDpB,SAhDoB,EAiDpB,QAjDoB,EAkDpB,SAlDoB,EAmDpB,OAnDoB,EAoDpB,OApDoB,EAqDpB,OArDoB,EAsDpB,SAtDoB,EAuDpB,KAvDoB,EAwDpB,OAxDoB,EAyDpB,MAzDoB,EA0DpB,UA1DoB,EA2DpB,OA3DoB,EA4DpB,OA5DoB,EA6DpB,KA7DoB,EA8DpB,QA9DoB,EA+DpB,IA/DoB,EAgEpB,QAhEoB,EAiEpB,OAjEoB,EAkEpB,IAlEoB,EAmEpB,SAnEoB,EAoEpB,WApEoB,EAqEpB,OArEoB,EAsEpB,OAtEoB,EAuEpB,QAvEoB,EAwEpB,OAxEoB,EAyEpB,QAzEoB,EA0EpB,WA1EoB,EA2EpB,MA3EoB,EA4EpB,IA5EoB,EA6EpB,MA7EoB,EA8EpB,KA9EoB,EA+EpB,MA/EoB,EAgFpB,UAhFoB,EAiFpB,OAjFoB,EAkFpB,MAlFoB,EAmFpB,MAnFoB,EAoFpB,KApFoB,EAqFpB,SArFoB,EAsFpB,MAtFoB,EAuFpB,OAvFoB,EAwFpB,KAxFoB,EAyFpB,KAzFoB,EA0FpB,SA1FoB,EA2FpB,SA3FoB,EA4FpB,cA5FoB,EA6FpB,OA7FoB,EA8FpB,OA9FoB,EA+FpB,SA/FoB,EAgGpB,WAhGoB,EAiGpB,MAjGoB,EAkGpB,KAlGoB,EAmGpB,MAnGoB,EAoGpB,QApGoB,EAqGpB,QArGoB,EAsGpB,QAtGoB,EAuGpB,IAvGoB,EAwGpB,QAxGoB,EAyGpB,IAzGoB,EA0GpB,OA1GoB,EA2GpB,OA3GoB,EA4GpB,MA5GoB,EA6GpB,OA7GoB,EA8GpB,WA9GoB,EA+GpB,UA/GoB,EAgHpB,MAhHoB,EAiHpB,MAjHoB,EAkHpB,SAlHoB,EAmHpB,SAnHoB,EAoHpB,SApHoB,EAqHpB,WArHoB,EAsHpB,WAtHoB,EAuHpB,QAvHoB,EAwHpB,KAxHoB,EAyHpB,OAzHoB,EA0HpB,QA1HoB,EA2HpB,QA3HoB,EA4HpB,QA5HoB,EA6HpB,WA7HoB,EA8HpB,QA9HoB,EA+HpB,OA/HoB,EAgIpB,MAhIoB,EAiIpB,UAjIoB,EAkIpB,WAlIoB,EAmIpB,QAnIoB,EAoIpB,QApIoB,EAqIpB,MArIoB,EAsIpB,MAtIoB,EAuIpB,KAvIoB,EAwIpB,MAxIoB,EAyIpB,MAzIoB,EA0IpB,OA1IoB,EA2IpB,YA3IoB,EA4IpB,QA5IoB,EA6IpB,QA7IoB,EA8IpB,MA9IoB,EA+IpB,IA/IoB,EAgJpB,aAhJoB,EAiJpB,SAjJoB,EAkJpB,MAlJoB,EAmJpB,UAnJoB,EAoJpB,OApJoB,EAqJpB,OArJoB,EAsJpB,QAtJoB,EAuJpB,SAvJoB,EAwJpB,QAxJoB,EAyJpB,OAzJoB,EA0JpB,QA1JoB,EA2JpB,QA3JoB,EA4JpB,KA5JoB,EA6JpB,MA7JoB,EA8JpB,OA9JoB,EA+JpB,UA/JoB,EAgKpB,OAhKoB,EAiKpB,QAjKoB,EAkKpB,QAlKoB,EAmKpB,KAnKoB,EAoKpB,MApKoB,EAqKpB,MArKoB,EAsKpB,OAtKoB,EAuKpB,OAvKoB,EAwKpB,MAxKoB,EAyKpB,QAzKoB,EA0KpB,MA1KoB,EA2KpB,KA3KoB,CAAtB;;AA8KA,MAAMC,wBAAwB,CAC5B,aAD4B,EAE5B,YAF4B,EAG5B,QAH4B,EAI5B,qBAJ4B,EAK5B,gBAL4B,EAM5B,gBAN4B,EAO5B,MAP4B,EAQ5B,UAR4B,EAS5B,QAT4B,EAU5B,OAV4B,EAW5B,aAX4B,EAY5B,eAZ4B,EAa5B,WAb4B,EAc5B,KAd4B,EAe5B,OAf4B,EAgB5B,OAhB4B,EAiB5B,MAjB4B,EAkB5B,UAlB4B,EAmB5B,SAnB4B,EAoB5B,QApB4B,EAqB5B,oBArB4B,EAsB5B,YAtB4B,EAuB5B,KAvB4B,EAwB5B,WAxB4B,EAyB5B,OAzB4B,EA0B5B,QA1B4B,EA2B5B,QA3B4B,EA4B5B,QA5B4B,EA6B5B,UA7B4B,EA8B5B,QA9B4B,EA+B5B,OA/B4B,CAA9B;;AAkCA,MAAMC,uBAAuB,CAC3B,KAD2B,EAE3B,YAF2B,EAG3B,MAH2B,EAI3B,WAJ2B,EAK3B,iBAL2B,EAM3B,IAN2B,EAO3B,YAP2B,EAQ3B,YAR2B,EAS3B,kBAT2B,EAU3B,KAV2B,CAA7B;;AAaA,IAAIC,SAAJ;;AAEe,MAAMC,aAAN,CAAoB;AACjC;;;AAGAC,cAAYC,GAAZ,EAAiB;AACf,SAAKA,GAAL,GAAWA,GAAX;AACD;;AAED;;;;;;AAMAC,SAAOC,KAAP,EAAc;AACZ,QAAI,CAACL,SAAL,EAAgB;AACdA,kBAAY,IAAIM,mBAAJ,CAAc;AACxBT,qBADwB;AAExBC,6BAFwB;AAGxBC,4BAHwB;AAIxBQ,qBAAa,CAAE,IAAF,EAAO,IAAP,EAAa,IAAb,CAJW;AAKxBC,oBAAY,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CALY;AAMxBC,qBAAa,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CANW;AAOxBC,+BAAuB,CAAC,GAAD,CAPC;AAQxBC,0BAAkB,CAAC,GAAD,EAAM,IAAN;AARM,OAAd,CAAZ;AAUD;AACD,WAAO,IAAIC,mBAAJ,CAAc,KAAKT,GAAnB,EAAwBH,SAAxB,EAAmCI,MAAnC,CAA0CC,KAA1C,CAAP;AACD;AA5BgC;kBAAdJ,a","file":"N1qlFormatter.js","sourcesContent":["import Formatter from '../core/Formatter';\nimport Tokenizer from '../core/Tokenizer';\n\nconst reservedWords = [\n  'ALL',\n  'ALTER',\n  'ANALYZE',\n  'AND',\n  'ANY',\n  'ARRAY',\n  'AS',\n  'ASC',\n  'BEGIN',\n  'BETWEEN',\n  'BINARY',\n  'BOOLEAN',\n  'BREAK',\n  'BUCKET',\n  'BUILD',\n  'BY',\n  'CALL',\n  'CASE',\n  'CAST',\n  'CLUSTER',\n  'COLLATE',\n  'COLLECTION',\n  'COMMIT',\n  'CONNECT',\n  'CONTINUE',\n  'CORRELATE',\n  'COVER',\n  'CREATE',\n  'DATABASE',\n  'DATASET',\n  'DATASTORE',\n  'DECLARE',\n  'DECREMENT',\n  'DELETE',\n  'DERIVED',\n  'DESC',\n  'DESCRIBE',\n  'DISTINCT',\n  'DO',\n  'DROP',\n  'EACH',\n  'ELEMENT',\n  'ELSE',\n  'END',\n  'EVERY',\n  'EXCEPT',\n  'EXCLUDE',\n  'EXECUTE',\n  'EXISTS',\n  'EXPLAIN',\n  'FALSE',\n  'FETCH',\n  'FIRST',\n  'FLATTEN',\n  'FOR',\n  'FORCE',\n  'FROM',\n  'FUNCTION',\n  'GRANT',\n  'GROUP',\n  'GSI',\n  'HAVING',\n  'IF',\n  'IGNORE',\n  'ILIKE',\n  'IN',\n  'INCLUDE',\n  'INCREMENT',\n  'INDEX',\n  'INFER',\n  'INLINE',\n  'INNER',\n  'INSERT',\n  'INTERSECT',\n  'INTO',\n  'IS',\n  'JOIN',\n  'KEY',\n  'KEYS',\n  'KEYSPACE',\n  'KNOWN',\n  'LAST',\n  'LEFT',\n  'LET',\n  'LETTING',\n  'LIKE',\n  'LIMIT',\n  'LSM',\n  'MAP',\n  'MAPPING',\n  'MATCHED',\n  'MATERIALIZED',\n  'MERGE',\n  'MINUS',\n  'MISSING',\n  'NAMESPACE',\n  'NEST',\n  'NOT',\n  'NULL',\n  'NUMBER',\n  'OBJECT',\n  'OFFSET',\n  'ON',\n  'OPTION',\n  'OR',\n  'ORDER',\n  'OUTER',\n  'OVER',\n  'PARSE',\n  'PARTITION',\n  'PASSWORD',\n  'PATH',\n  'POOL',\n  'PREPARE',\n  'PRIMARY',\n  'PRIVATE',\n  'PRIVILEGE',\n  'PROCEDURE',\n  'PUBLIC',\n  'RAW',\n  'REALM',\n  'REDUCE',\n  'RENAME',\n  'RETURN',\n  'RETURNING',\n  'REVOKE',\n  'RIGHT',\n  'ROLE',\n  'ROLLBACK',\n  'SATISFIES',\n  'SCHEMA',\n  'SELECT',\n  'SELF',\n  'SEMI',\n  'SET',\n  'SHOW',\n  'SOME',\n  'START',\n  'STATISTICS',\n  'STRING',\n  'SYSTEM',\n  'THEN',\n  'TO',\n  'TRANSACTION',\n  'TRIGGER',\n  'TRUE',\n  'TRUNCATE',\n  'UNDER',\n  'UNION',\n  'UNIQUE',\n  'UNKNOWN',\n  'UNNEST',\n  'UNSET',\n  'UPDATE',\n  'UPSERT',\n  'USE',\n  'USER',\n  'USING',\n  'VALIDATE',\n  'VALUE',\n  'VALUED',\n  'VALUES',\n  'VIA',\n  'VIEW',\n  'WHEN',\n  'WHERE',\n  'WHILE',\n  'WITH',\n  'WITHIN',\n  'WORK',\n  'XOR'\n];\n\nconst reservedToplevelWords = [\n  'DELETE FROM',\n  'EXCEPT ALL',\n  'EXCEPT',\n  'EXPLAIN DELETE FROM',\n  'EXPLAIN UPDATE',\n  'EXPLAIN UPSERT',\n  'FROM',\n  'GROUP BY',\n  'HAVING',\n  'INFER',\n  'INSERT INTO',\n  'INTERSECT ALL',\n  'INTERSECT',\n  'LET',\n  'LIMIT',\n  'MERGE',\n  'NEST',\n  'ORDER BY',\n  'PREPARE',\n  'SELECT',\n  'SET CURRENT SCHEMA',\n  'SET SCHEMA',\n  'SET',\n  'UNION ALL',\n  'UNION',\n  'UNNEST',\n  'UPDATE',\n  'UPSERT',\n  'USE KEYS',\n  'VALUES',\n  'WHERE'\n];\n\nconst reservedNewlineWords = [\n  'AND',\n  'INNER JOIN',\n  'JOIN',\n  'LEFT JOIN',\n  'LEFT OUTER JOIN',\n  'OR',\n  'OUTER JOIN',\n  'RIGHT JOIN',\n  'RIGHT OUTER JOIN',\n  'XOR'\n];\n\nlet tokenizer;\n\nexport default class N1qlFormatter {\n  /**\n   * @param {Object} cfg Different set of configurations\n   */\n  constructor(cfg) {\n    this.cfg = cfg;\n  }\n\n  /**\n   * Format the whitespace in a N1QL string to make it easier to read\n   *\n   * @param {String} query The N1QL string\n   * @return {String} formatted string\n   */\n  format(query) {\n    if (!tokenizer) {\n      tokenizer = new Tokenizer({\n        reservedWords,\n        reservedToplevelWords,\n        reservedNewlineWords,\n        stringTypes: [`\"\"`, \"''\", '``'],\n        openParens: ['(', '[', '{'],\n        closeParens: [')', ']', '}'],\n        namedPlaceholderTypes: ['$'],\n        lineCommentTypes: ['#', '--']\n      });\n    }\n    return new Formatter(this.cfg, tokenizer).format(query);\n  }\n}\n"]}