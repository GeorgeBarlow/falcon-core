{"version":3,"sources":["../src/index.js"],"names":["format","query","cfg","language","Db2Formatter","N1qlFormatter","undefined","StandardSqlFormatter","Error"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;kBAEe;AACb;;;;;;;;;;AAUAA,UAAQ,CAACC,KAAD,EAAQC,MAAM,EAAd,KAAqB;AAC3B,YAAQA,IAAIC,QAAZ;AACE,WAAK,KAAL;AACE,eAAO,IAAIC,sBAAJ,CAAiBF,GAAjB,EAAsBF,MAAtB,CAA6BC,KAA7B,CAAP;AACF,WAAK,MAAL;AACE,eAAO,IAAII,uBAAJ,CAAkBH,GAAlB,EAAuBF,MAAvB,CAA8BC,KAA9B,CAAP;AACF,WAAK,KAAL;AACA,WAAKK,SAAL;AACE,eAAO,IAAIC,8BAAJ,CAAyBL,GAAzB,EAA8BF,MAA9B,CAAqCC,KAArC,CAAP;AACF;AACE,cAAMO,MAAO,4BAA2BN,IAAIC,QAAS,EAA/C,CAAN;AATJ;AAWD;AAvBY,C","file":"index.js","sourcesContent":["import Db2Formatter from './languages/Db2Formatter';\nimport N1qlFormatter from './languages/N1qlFormatter';\nimport StandardSqlFormatter from './languages/StandardSqlFormatter';\n\nexport default {\n  /**\n   * Format whitespaces in a query to make it easier to read.\n   *\n   * @param {String} query\n   * @param {Object} cfg\n   *  @param {String} cfg.language Query language, default is Standard SQL\n   *  @param {String} cfg.indent Characters used for indentation, default is \"  \" (2 spaces)\n   *  @param {Object} cfg.params Collection of params for placeholder replacement\n   * @return {String}\n   */\n  format: (query, cfg = {}) => {\n    switch (cfg.language) {\n      case 'db2':\n        return new Db2Formatter(cfg).format(query);\n      case 'n1ql':\n        return new N1qlFormatter(cfg).format(query);\n      case 'sql':\n      case undefined:\n        return new StandardSqlFormatter(cfg).format(query);\n      default:\n        throw Error(`Unsupported SQL dialect: ${cfg.language}`);\n    }\n  }\n};\n"]}