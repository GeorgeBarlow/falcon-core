{"version":3,"sources":["../../src/core/Params.js"],"names":["Params","constructor","params","index","get","key","value"],"mappings":"AAAA;;;AAGA,eAAe,MAAMA,MAAN,CAAa;AAC1B;;;AAGAC,cAAYC,MAAZ,EAAoB;AAClB,SAAKA,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAa,CAAb;AACD;;AAED;;;;;;;AAOAC,MAAI,EAAEC,GAAF,EAAOC,KAAP,EAAJ,EAAoB;AAClB,QAAI,CAAC,KAAKJ,MAAV,EAAkB;AAChB,aAAOI,KAAP;AACD;AACD,QAAID,GAAJ,EAAS;AACP,aAAO,KAAKH,MAAL,CAAYG,GAAZ,CAAP;AACD;AACD,WAAO,KAAKH,MAAL,CAAY,KAAKC,KAAL,EAAZ,CAAP;AACD;AAxByB","file":"Params.js","sourcesContent":["/**\n * Handles placeholder replacement with given params.\n */\nexport default class Params {\n  /**\n   * @param {Object} params\n   */\n  constructor(params) {\n    this.params = params;\n    this.index = 0;\n  }\n\n  /**\n   * Returns param value that matches given placeholder with param key.\n   * @param {Object} token\n   *   @param {String} token.key Placeholder key\n   *   @param {String} token.value Placeholder value\n   * @return {String} param or token.value when params are missing\n   */\n  get({ key, value }) {\n    if (!this.params) {\n      return value;\n    }\n    if (key) {\n      return this.params[key];\n    }\n    return this.params[this.index++];\n  }\n}\n"]}