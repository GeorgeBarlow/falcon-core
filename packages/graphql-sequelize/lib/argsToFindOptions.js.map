{"version":3,"sources":["../src/argsToFindOptions.js"],"names":["argsToFindOptions","args","targetAttributes","result","Object","keys","forEach","key","indexOf","where","limit","parseInt","offset","order","substring"],"mappings":";;;;;kBAEwBA,iB;;AAFxB;;AAEe,SAASA,iBAAT,CAA2BC,IAA3B,EAAiCC,gBAAjC,EAAmD;AAChE,MAAIC,SAAS,EAAb;;AAEA,MAAIF,IAAJ,EAAU;AACRG,WAAOC,IAAP,CAAYJ,IAAZ,EAAkBK,OAAlB,CAA0B,UAAUC,GAAV,EAAe;AACvC,UAAI,CAACL,iBAAiBM,OAAjB,CAAyBD,GAAzB,CAAL,EAAoC;AAClCJ,eAAOM,KAAP,GAAeN,OAAOM,KAAP,IAAgB,EAA/B;AACAN,eAAOM,KAAP,CAAaF,GAAb,IAAoBN,KAAKM,GAAL,CAApB;AACD;;AAED,UAAIA,QAAQ,OAAR,IAAmBN,KAAKM,GAAL,CAAvB,EAAkC;AAChCJ,eAAOO,KAAP,GAAeC,SAASV,KAAKM,GAAL,CAAT,EAAoB,EAApB,CAAf;AACD;;AAED,UAAIA,QAAQ,QAAR,IAAoBN,KAAKM,GAAL,CAAxB,EAAmC;AACjCJ,eAAOS,MAAP,GAAgBD,SAASV,KAAKM,GAAL,CAAT,EAAoB,EAApB,CAAhB;AACD;;AAED,UAAIA,QAAQ,OAAR,IAAmBN,KAAKM,GAAL,CAAvB,EAAkC;AAChC,YAAIN,KAAKM,GAAL,EAAUC,OAAV,CAAkB,UAAlB,MAAkC,CAAtC,EAAyC;AACvCL,iBAAOU,KAAP,GAAe,CAAC,CAACZ,KAAKM,GAAL,EAAUO,SAAV,CAAoB,CAApB,CAAD,EAAyB,MAAzB,CAAD,CAAf;AACD,SAFD,MAEO;AACLX,iBAAOU,KAAP,GAAe,CAAC,CAACZ,KAAKM,GAAL,CAAD,EAAY,KAAZ,CAAD,CAAf;AACD;AACF;;AAED,UAAIA,QAAQ,OAAR,IAAmBN,KAAKM,GAAL,CAAvB,EAAkC;AAChC;AACAJ,eAAOM,KAAP,GAAe,kDAAsBR,KAAKQ,KAA3B,CAAf;AACD;AAEF,KA3BD;AA4BD;;AAED,SAAON,MAAP;AACD","file":"argsToFindOptions.js","sourcesContent":["import {replaceWhereOperators} from './replaceWhereOperators';\n\nexport default function argsToFindOptions(args, targetAttributes) {\n  var result = {};\n\n  if (args) {\n    Object.keys(args).forEach(function (key) {\n      if (~targetAttributes.indexOf(key)) {\n        result.where = result.where || {};\n        result.where[key] = args[key];\n      }\n\n      if (key === 'limit' && args[key]) {\n        result.limit = parseInt(args[key], 10);\n      }\n\n      if (key === 'offset' && args[key]) {\n        result.offset = parseInt(args[key], 10);\n      }\n\n      if (key === 'order' && args[key]) {\n        if (args[key].indexOf('reverse:') === 0) {\n          result.order = [[args[key].substring(8), 'DESC']];\n        } else {\n          result.order = [[args[key], 'ASC']];\n        }\n      }\n\n      if (key === 'where' && args[key]) {\n        // setup where\n        result.where = replaceWhereOperators(args.where);\n      }\n\n    });\n  }\n\n  return result;\n}\n"]}