{"version":3,"sources":["../src/defaultArgs.js"],"names":["typeMapper","JSONType","Model","result","key","primaryKeyAttribute","attribute","rawAttributes","type","toGraphQL","sequelize","constructor","where","description"],"mappings":"AAAA,OAAO,KAAKA,UAAZ,MAA4B,cAA5B;AACA,OAAOC,QAAP,MAAqB,kBAArB;;AAEA,eAAe,UAAUC,KAAV,EAAiB;AAC9B,MAAIC,SAAS,EAAb;AAAA,MACIC,MAAMF,MAAMG,mBADhB;AAAA,MAEIC,YAAYJ,MAAMK,aAAN,CAAoBH,GAApB,CAFhB;AAAA,MAGII,IAHJ;;AAKA,MAAIJ,OAAOE,SAAX,EAAsB;AACpBE,WAAOR,WAAWS,SAAX,CAAqBH,UAAUE,IAA/B,EAAqCN,MAAMQ,SAAN,CAAgBC,WAArD,CAAP;AACAR,WAAOC,GAAP,IAAc;AACZI,YAAMA;AADM,KAAd;AAGD;;AAED;AACAL,SAAOS,KAAP,GAAe;AACbJ,UAAMP,QADO;AAEbY,iBAAa;AAFA,GAAf;;AAKA,SAAOV,MAAP;AACD","file":"defaultArgs.js","sourcesContent":["import * as typeMapper from './typeMapper';\nimport JSONType from './types/jsonType';\n\nexport default function (Model) {\n  var result = {}\n    , key = Model.primaryKeyAttribute\n    , attribute = Model.rawAttributes[key]\n    , type;\n\n  if (key && attribute) {\n    type = typeMapper.toGraphQL(attribute.type, Model.sequelize.constructor);\n    result[key] = {\n      type: type\n    };\n  }\n\n  // add where\n  result.where = {\n    type: JSONType,\n    description: 'A JSON object conforming the the shape specified in http://docs.sequelizejs.com/en/latest/docs/querying/'\n  };\n\n  return result;\n};\n"]}